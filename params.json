{
  "name": "Inspeckage",
  "tagline": "Android Package Inspector",
  "body": "### The Project\r\nInspeckage is a tool developed to offer dynamic analysis of Android applications. By applying hooks to functions of the Android API, Inspeckage will help you understand what an Android application is doing at runtime. \r\n\r\n* https://twitter.com/inspeckage\r\n* https://play.google.com/store/apps/details?id=mobi.acpm.inspeckage\r\n\r\n### Donate\r\nIf you've found Inspeckage useful, it'd be great if you could send us a little gift. \r\n\r\n#### Bitcoin or Paypal.\r\n\r\n\r\nFeatures\r\n---------------\r\n\r\nWith Inspeckage, we can get a good amount of information about the application's behavior:\r\n\r\n#### Information gathering \r\n\r\n* Requested Permissions;\r\n* App Permissions;\r\n* Shared Libraries;\r\n* Exported and Non-exported Activities, Content Providers,Broadcast Receivers and Services;\r\n* Check if the app is debuggable or not;\r\n* Version, UID and GIDs;\r\n* etc.\r\n\r\n#### Hooks (so far)\r\n\r\nWith the hooks, we can see what the application is doing in real time:\r\n\r\n* Shared Preferences (log and file);\r\n* Serialization;\r\n* Crypto;\r\n* Hashes;\r\n* SQLite;\r\n* HTTP (an HTTP proxy tool is still the best alternative);\r\n* File System;\r\n* Miscellaneous (Clipboard, URL.Parse());\r\n* WebView;\r\n* IPC;\r\n* + Hooks (add new hooks dynamically)\r\n\r\n#### Actions\r\n\r\nWith Xposed it's possible to perform actions such as start a unexported activity and much else:\r\n\r\n* Start any activity (exported and unexported);\r\n* Call any provider (exported and unexported);\r\n* Disable FLAG_SECURE;\r\n* SSL uncheck (bypass certificate pinning - JSSE, Apache and okhttp3);\r\n* Start, stop and restart the application.\r\n\r\n#### Extras\r\n\r\n* APK Download;\r\n* View the app's directory tree;\r\n* Download the app's files;\r\n* Download the output generated by hooks in text file format;\r\n* Take a screen capture;\r\n\r\n#### Configuration\r\n\r\nEven though our tool has some hooks to the HTTP libraries, using an external proxy tool is still the best option to analyze the app's traffic. With Inspeckage, you can:\r\n\r\n* Add a proxy to the target app;\r\n* Enable and disable proxy;\r\n* Add entries in the arp table.\r\n\r\n#### Logcat\r\n\r\nLogcat.html page. A experimental page with websocket to show some information from the logcat.\r\n\r\nInstallation\r\n---------------\r\nRequirements:\r\nXposed Framework\r\n\r\n##### Xposed Installer\r\n\r\n1. Go to Xposed Installer, select \"Download\"\r\n2. Refresh and search for \"Inspeckage\"\r\n3. Download the latest version and install\r\n4. Enable it in Xposed\r\n5. Reboot and enjoy!\r\n\r\n##### Xposed Repository\r\n\r\nGet it from Xposed repo: http://repo.xposed.info/module/mobi.acpm.inspeckage\r\n\r\n        adb install mobi.acpm.inspeckage.apk\r\n1. Enable it in Xposed\r\n2. Reboot and enjoy!\r\n\r\n##### From Source\r\n\r\nFeel free to download the source!\r\n\r\n### How to uninstall\r\n\r\n        adb uninstall mobi.acpm.inspeckage\r\nAnd reboot!\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}